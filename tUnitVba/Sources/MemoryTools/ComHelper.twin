Private Module ComHelper
    '@Folder "TypeInfoInvoker"
    Option Private Module
    Option Explicit

    Private Type GUID
        Data1 As Long
        Data2 As Integer
        Data3 As Integer
        Data4(0 To 7) As Byte
    End Type

    Private Type bytes
        bytes(0 To 15) As Byte
    End Type

    Private Enum IUnknownVtableOffsets
        OfQueryInterface = 0
        OfAddRef = 1
        OfReleaseRef = 2
    End Enum

    Public Enum hResultCode
        S_OK = 0
    End Enum

    Public Enum CallingConventions
        CC_STDCALL = 4
    End Enum

    Public Declare PtrSafe Function DispCallFunc Lib "oleaut32.dll" (ByVal pvInstance As LongPtr, ByVal offsetVtable As LongPtr, ByVal CallConv As Long, ByVal vartypeReturn As Integer, ByVal paramCount As Long, ByRef paramTypes As Integer, ByRef paramValues As LongPtr, ByRef returnValue As Variant) As Long
    Public Declare PtrSafe Function IIDFromString Lib "OLE32.DLL" (ByVal lpsz As LongPtr, ByRef lpiid As GUID) As Long

    Public Function ObjectFromObjPtr(ByVal Address As LongPtr) As IUnknown
        Dim result As IUnknown
        MemLongPtr (VarPtr(result)) = Address
        Set ObjectFromObjPtr = result
        MemLongPtr (VarPtr(result)) = 0
    End Function

    Public Function QueryInterface(ByRef ClassInstance As IUnknown, ByVal InterfaceIID As String) As LongPtr

        Dim hresult As hResultCode
        Dim retVal As LongPtr

        Dim varTypes(1) As Integer
        Dim ptrVarValues(1) As LongPtr
        Dim apiRetVal As Variant
        
        
        Dim InterfaceGUID As GUID
        IIDFromString StrPtr(InterfaceIID), InterfaceGUID

        Dim valueWrapper0 As Variant
        Dim valueWrapper1 As Variant

        valueWrapper0 = VarPtr(InterfaceGUID)
        valueWrapper1 = VarPtr(retVal)

        ptrVarValues (0) = VarPtr(valueWrapper0)
        ptrVarValues (1) = VarPtr(valueWrapper1)
        
        varTypes (0) = VbVarType.vbLong
        varTypes (1) = VarType(retVal)
        
        Dim paramCount As Long
        paramCount = 2
        
        Dim objAdr As LongPtr
        objAdr = ObjPtr(ClassInstance)
        
        hresult = DispCallFunc(objAdr, IUnknownVtableOffsets.OfQueryInterface * PTR_SIZE, CC_STDCALL, VbVarType.vbLong, paramCount, varTypes(0), ptrVarValues(0), apiRetVal)

        If hresult = S_OK Then
            hresult = apiRetVal
            
            If hresult = S_OK Then
                QueryInterface = retVal
            Else
                Err.Raise hresult, "QueryInterface", "Failed to cast to interface pointer. IUnknown::QueryInterface HRESULT: 0x" & Hex(hresult)
            End If
        Else
            Err.Raise hresult, "DispCallFunc", "Failed to cast to interface pointer. DispCallFunc HRESULT: 0x" & Hex(hresult)
        End If
            
    End Function

    Public Function QueryInterfaceObject(ByRef ClassInstance As IUnknown, ByVal InterfaceIID As String) As IUnknown
        Set QueryInterfaceObject = ObjectFromObjPtr(QueryInterface(ClassInstance, InterfaceIID))
    End Function
End Module